#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proiect
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SALON")]
	public partial class SALONDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAngajati(Angajati instance);
    partial void UpdateAngajati(Angajati instance);
    partial void DeleteAngajati(Angajati instance);
    partial void InsertClienti(Clienti instance);
    partial void UpdateClienti(Clienti instance);
    partial void DeleteClienti(Clienti instance);
    partial void InsertDepartamente(Departamente instance);
    partial void UpdateDepartamente(Departamente instance);
    partial void DeleteDepartamente(Departamente instance);
    partial void InsertServicii(Servicii instance);
    partial void UpdateServicii(Servicii instance);
    partial void DeleteServicii(Servicii instance);
    partial void InsertProgramari(Programari instance);
    partial void UpdateProgramari(Programari instance);
    partial void DeleteProgramari(Programari instance);
    partial void InsertProduse_Cosmetice(Produse_Cosmetice instance);
    partial void UpdateProduse_Cosmetice(Produse_Cosmetice instance);
    partial void DeleteProduse_Cosmetice(Produse_Cosmetice instance);
    partial void InsertPreferinte(Preferinte instance);
    partial void UpdatePreferinte(Preferinte instance);
    partial void DeletePreferinte(Preferinte instance);
    partial void InsertIstoric_Clienti(Istoric_Clienti instance);
    partial void UpdateIstoric_Clienti(Istoric_Clienti instance);
    partial void DeleteIstoric_Clienti(Istoric_Clienti instance);
    partial void InsertFunctii(Functii instance);
    partial void UpdateFunctii(Functii instance);
    partial void DeleteFunctii(Functii instance);
    partial void InsertServicii1(Servicii1 instance);
    partial void UpdateServicii1(Servicii1 instance);
    partial void DeleteServicii1(Servicii1 instance);
    #endregion
		
		public SALONDataContext() : 
				base(global::Proiect.Properties.Settings.Default.SALONConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SALONDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SALONDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SALONDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SALONDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Angajati> Angajatis
		{
			get
			{
				return this.GetTable<Angajati>();
			}
		}
		
		public System.Data.Linq.Table<Angajati_Functii_Departamente> Angajati_Functii_Departamentes
		{
			get
			{
				return this.GetTable<Angajati_Functii_Departamente>();
			}
		}
		
		public System.Data.Linq.Table<Clienti> Clientis
		{
			get
			{
				return this.GetTable<Clienti>();
			}
		}
		
		public System.Data.Linq.Table<Departamente> Departamentes
		{
			get
			{
				return this.GetTable<Departamente>();
			}
		}
		
		public System.Data.Linq.Table<Servicii> Serviciis
		{
			get
			{
				return this.GetTable<Servicii>();
			}
		}
		
		public System.Data.Linq.Table<Programari> Programaris
		{
			get
			{
				return this.GetTable<Programari>();
			}
		}
		
		public System.Data.Linq.Table<Produse_Cosmetice> Produse_Cosmetices
		{
			get
			{
				return this.GetTable<Produse_Cosmetice>();
			}
		}
		
		public System.Data.Linq.Table<Preferinte> Preferintes
		{
			get
			{
				return this.GetTable<Preferinte>();
			}
		}
		
		public System.Data.Linq.Table<Istoric_Clienti> Istoric_Clientis
		{
			get
			{
				return this.GetTable<Istoric_Clienti>();
			}
		}
		
		public System.Data.Linq.Table<Functii> Functiis
		{
			get
			{
				return this.GetTable<Functii>();
			}
		}
		
		public System.Data.Linq.Table<Servicii1> Servicii1s
		{
			get
			{
				return this.GetTable<Servicii1>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Angajati")]
	public partial class Angajati : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Angajat;
		
		private string _Nume;
		
		private string _Prenume;
		
		private System.Nullable<System.DateTime> _Data_Nasterii;
		
		private System.Nullable<System.DateTime> _Data_Angajarii;
		
		private string _Adresa;
		
		private string _Oras;
		
		private EntitySet<Programari> _Programaris;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_AngajatChanging(int value);
    partial void OnID_AngajatChanged();
    partial void OnNumeChanging(string value);
    partial void OnNumeChanged();
    partial void OnPrenumeChanging(string value);
    partial void OnPrenumeChanged();
    partial void OnData_NasteriiChanging(System.Nullable<System.DateTime> value);
    partial void OnData_NasteriiChanged();
    partial void OnData_AngajariiChanging(System.Nullable<System.DateTime> value);
    partial void OnData_AngajariiChanged();
    partial void OnAdresaChanging(string value);
    partial void OnAdresaChanged();
    partial void OnOrasChanging(string value);
    partial void OnOrasChanged();
    #endregion
		
		public Angajati()
		{
			this._Programaris = new EntitySet<Programari>(new Action<Programari>(this.attach_Programaris), new Action<Programari>(this.detach_Programaris));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Angajat", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Angajat
		{
			get
			{
				return this._ID_Angajat;
			}
			set
			{
				if ((this._ID_Angajat != value))
				{
					this.OnID_AngajatChanging(value);
					this.SendPropertyChanging();
					this._ID_Angajat = value;
					this.SendPropertyChanged("ID_Angajat");
					this.OnID_AngajatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nume
		{
			get
			{
				return this._Nume;
			}
			set
			{
				if ((this._Nume != value))
				{
					this.OnNumeChanging(value);
					this.SendPropertyChanging();
					this._Nume = value;
					this.SendPropertyChanged("Nume");
					this.OnNumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenume", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Prenume
		{
			get
			{
				return this._Prenume;
			}
			set
			{
				if ((this._Prenume != value))
				{
					this.OnPrenumeChanging(value);
					this.SendPropertyChanging();
					this._Prenume = value;
					this.SendPropertyChanged("Prenume");
					this.OnPrenumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Nasterii", DbType="DateTime")]
		public System.Nullable<System.DateTime> Data_Nasterii
		{
			get
			{
				return this._Data_Nasterii;
			}
			set
			{
				if ((this._Data_Nasterii != value))
				{
					this.OnData_NasteriiChanging(value);
					this.SendPropertyChanging();
					this._Data_Nasterii = value;
					this.SendPropertyChanged("Data_Nasterii");
					this.OnData_NasteriiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Angajarii", DbType="DateTime")]
		public System.Nullable<System.DateTime> Data_Angajarii
		{
			get
			{
				return this._Data_Angajarii;
			}
			set
			{
				if ((this._Data_Angajarii != value))
				{
					this.OnData_AngajariiChanging(value);
					this.SendPropertyChanging();
					this._Data_Angajarii = value;
					this.SendPropertyChanged("Data_Angajarii");
					this.OnData_AngajariiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresa", DbType="NVarChar(60)")]
		public string Adresa
		{
			get
			{
				return this._Adresa;
			}
			set
			{
				if ((this._Adresa != value))
				{
					this.OnAdresaChanging(value);
					this.SendPropertyChanging();
					this._Adresa = value;
					this.SendPropertyChanged("Adresa");
					this.OnAdresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oras", DbType="NVarChar(50)")]
		public string Oras
		{
			get
			{
				return this._Oras;
			}
			set
			{
				if ((this._Oras != value))
				{
					this.OnOrasChanging(value);
					this.SendPropertyChanging();
					this._Oras = value;
					this.SendPropertyChanged("Oras");
					this.OnOrasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Angajati_Programari", Storage="_Programaris", ThisKey="ID_Angajat", OtherKey="ID_Angajat")]
		public EntitySet<Programari> Programaris
		{
			get
			{
				return this._Programaris;
			}
			set
			{
				this._Programaris.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Programaris(Programari entity)
		{
			this.SendPropertyChanging();
			entity.Angajati = this;
		}
		
		private void detach_Programaris(Programari entity)
		{
			this.SendPropertyChanging();
			entity.Angajati = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Angajati_Functii_Departamente")]
	public partial class Angajati_Functii_Departamente
	{
		
		private System.Nullable<int> _ID_Angajat;
		
		private System.Nullable<int> _ID_Functie;
		
		private System.Nullable<int> _ID_Departament;
		
		public Angajati_Functii_Departamente()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Angajat", DbType="Int")]
		public System.Nullable<int> ID_Angajat
		{
			get
			{
				return this._ID_Angajat;
			}
			set
			{
				if ((this._ID_Angajat != value))
				{
					this._ID_Angajat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Functie", DbType="Int")]
		public System.Nullable<int> ID_Functie
		{
			get
			{
				return this._ID_Functie;
			}
			set
			{
				if ((this._ID_Functie != value))
				{
					this._ID_Functie = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Departament", DbType="Int")]
		public System.Nullable<int> ID_Departament
		{
			get
			{
				return this._ID_Departament;
			}
			set
			{
				if ((this._ID_Departament != value))
				{
					this._ID_Departament = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clienti")]
	public partial class Clienti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Client;
		
		private string _Nume;
		
		private string _Prenume;
		
		private string _Telefon;
		
		private string _Email;
		
		private EntitySet<Programari> _Programaris;
		
		private EntitySet<Istoric_Clienti> _Istoric_Clientis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ClientChanging(int value);
    partial void OnID_ClientChanged();
    partial void OnNumeChanging(string value);
    partial void OnNumeChanged();
    partial void OnPrenumeChanging(string value);
    partial void OnPrenumeChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Clienti()
		{
			this._Programaris = new EntitySet<Programari>(new Action<Programari>(this.attach_Programaris), new Action<Programari>(this.detach_Programaris));
			this._Istoric_Clientis = new EntitySet<Istoric_Clienti>(new Action<Istoric_Clienti>(this.attach_Istoric_Clientis), new Action<Istoric_Clienti>(this.detach_Istoric_Clientis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Client", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Client
		{
			get
			{
				return this._ID_Client;
			}
			set
			{
				if ((this._ID_Client != value))
				{
					this.OnID_ClientChanging(value);
					this.SendPropertyChanging();
					this._ID_Client = value;
					this.SendPropertyChanged("ID_Client");
					this.OnID_ClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nume
		{
			get
			{
				return this._Nume;
			}
			set
			{
				if ((this._Nume != value))
				{
					this.OnNumeChanging(value);
					this.SendPropertyChanging();
					this._Nume = value;
					this.SendPropertyChanged("Nume");
					this.OnNumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenume", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Prenume
		{
			get
			{
				return this._Prenume;
			}
			set
			{
				if ((this._Prenume != value))
				{
					this.OnPrenumeChanging(value);
					this.SendPropertyChanging();
					this._Prenume = value;
					this.SendPropertyChanged("Prenume");
					this.OnPrenumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="VarChar(10)")]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(30)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clienti_Programari", Storage="_Programaris", ThisKey="ID_Client", OtherKey="ID_Client")]
		public EntitySet<Programari> Programaris
		{
			get
			{
				return this._Programaris;
			}
			set
			{
				this._Programaris.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clienti_Istoric_Clienti", Storage="_Istoric_Clientis", ThisKey="ID_Client", OtherKey="ID_Client")]
		public EntitySet<Istoric_Clienti> Istoric_Clientis
		{
			get
			{
				return this._Istoric_Clientis;
			}
			set
			{
				this._Istoric_Clientis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Programaris(Programari entity)
		{
			this.SendPropertyChanging();
			entity.Clienti = this;
		}
		
		private void detach_Programaris(Programari entity)
		{
			this.SendPropertyChanging();
			entity.Clienti = null;
		}
		
		private void attach_Istoric_Clientis(Istoric_Clienti entity)
		{
			this.SendPropertyChanging();
			entity.Clienti = this;
		}
		
		private void detach_Istoric_Clientis(Istoric_Clienti entity)
		{
			this.SendPropertyChanging();
			entity.Clienti = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Departamente")]
	public partial class Departamente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_departament;
		
		private string _Denumire;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_departamentChanging(int value);
    partial void OnID_departamentChanged();
    partial void OnDenumireChanging(string value);
    partial void OnDenumireChanged();
    #endregion
		
		public Departamente()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_departament", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_departament
		{
			get
			{
				return this._ID_departament;
			}
			set
			{
				if ((this._ID_departament != value))
				{
					this.OnID_departamentChanging(value);
					this.SendPropertyChanging();
					this._ID_departament = value;
					this.SendPropertyChanged("ID_departament");
					this.OnID_departamentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Denumire", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Denumire
		{
			get
			{
				return this._Denumire;
			}
			set
			{
				if ((this._Denumire != value))
				{
					this.OnDenumireChanging(value);
					this.SendPropertyChanging();
					this._Denumire = value;
					this.SendPropertyChanged("Denumire");
					this.OnDenumireChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Servicii")]
	public partial class Servicii : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Serviciu;
		
		private string _Denumire;
		
		private int _Durata_aprox;
		
		private double _Pret;
		
		private EntitySet<Programari> _Programaris;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ServiciuChanging(int value);
    partial void OnID_ServiciuChanged();
    partial void OnDenumireChanging(string value);
    partial void OnDenumireChanged();
    partial void OnDurata_aproxChanging(int value);
    partial void OnDurata_aproxChanged();
    partial void OnPretChanging(double value);
    partial void OnPretChanged();
    #endregion
		
		public Servicii()
		{
			this._Programaris = new EntitySet<Programari>(new Action<Programari>(this.attach_Programaris), new Action<Programari>(this.detach_Programaris));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Serviciu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Serviciu
		{
			get
			{
				return this._ID_Serviciu;
			}
			set
			{
				if ((this._ID_Serviciu != value))
				{
					this.OnID_ServiciuChanging(value);
					this.SendPropertyChanging();
					this._ID_Serviciu = value;
					this.SendPropertyChanged("ID_Serviciu");
					this.OnID_ServiciuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Denumire", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Denumire
		{
			get
			{
				return this._Denumire;
			}
			set
			{
				if ((this._Denumire != value))
				{
					this.OnDenumireChanging(value);
					this.SendPropertyChanging();
					this._Denumire = value;
					this.SendPropertyChanged("Denumire");
					this.OnDenumireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Durata_aprox", DbType="Int NOT NULL")]
		public int Durata_aprox
		{
			get
			{
				return this._Durata_aprox;
			}
			set
			{
				if ((this._Durata_aprox != value))
				{
					this.OnDurata_aproxChanging(value);
					this.SendPropertyChanging();
					this._Durata_aprox = value;
					this.SendPropertyChanged("Durata_aprox");
					this.OnDurata_aproxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pret", DbType="Float NOT NULL")]
		public double Pret
		{
			get
			{
				return this._Pret;
			}
			set
			{
				if ((this._Pret != value))
				{
					this.OnPretChanging(value);
					this.SendPropertyChanging();
					this._Pret = value;
					this.SendPropertyChanged("Pret");
					this.OnPretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Servicii_Programari", Storage="_Programaris", ThisKey="ID_Serviciu", OtherKey="ID_Serviciu")]
		public EntitySet<Programari> Programaris
		{
			get
			{
				return this._Programaris;
			}
			set
			{
				this._Programaris.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Programaris(Programari entity)
		{
			this.SendPropertyChanging();
			entity.Servicii = this;
		}
		
		private void detach_Programaris(Programari entity)
		{
			this.SendPropertyChanging();
			entity.Servicii = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Programari")]
	public partial class Programari : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Programare;
		
		private System.Nullable<int> _ID_Client;
		
		private System.Nullable<int> _ID_Angajat;
		
		private System.Nullable<int> _ID_Serviciu;
		
		private System.DateTime _Data_programare;
		
		private int _Durata;
		
		private string _Status;
		
		private EntitySet<Preferinte> _Preferintes;
		
		private EntitySet<Istoric_Clienti> _Istoric_Clientis;
		
		private EntityRef<Angajati> _Angajati;
		
		private EntityRef<Clienti> _Clienti;
		
		private EntityRef<Servicii> _Servicii;
		
		private EntityRef<Servicii1> _Servicii1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ProgramareChanging(int value);
    partial void OnID_ProgramareChanged();
    partial void OnID_ClientChanging(System.Nullable<int> value);
    partial void OnID_ClientChanged();
    partial void OnID_AngajatChanging(System.Nullable<int> value);
    partial void OnID_AngajatChanged();
    partial void OnID_ServiciuChanging(System.Nullable<int> value);
    partial void OnID_ServiciuChanged();
    partial void OnData_programareChanging(System.DateTime value);
    partial void OnData_programareChanged();
    partial void OnDurataChanging(int value);
    partial void OnDurataChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public Programari()
		{
			this._Preferintes = new EntitySet<Preferinte>(new Action<Preferinte>(this.attach_Preferintes), new Action<Preferinte>(this.detach_Preferintes));
			this._Istoric_Clientis = new EntitySet<Istoric_Clienti>(new Action<Istoric_Clienti>(this.attach_Istoric_Clientis), new Action<Istoric_Clienti>(this.detach_Istoric_Clientis));
			this._Angajati = default(EntityRef<Angajati>);
			this._Clienti = default(EntityRef<Clienti>);
			this._Servicii = default(EntityRef<Servicii>);
			this._Servicii1 = default(EntityRef<Servicii1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Programare", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Programare
		{
			get
			{
				return this._ID_Programare;
			}
			set
			{
				if ((this._ID_Programare != value))
				{
					this.OnID_ProgramareChanging(value);
					this.SendPropertyChanging();
					this._ID_Programare = value;
					this.SendPropertyChanged("ID_Programare");
					this.OnID_ProgramareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Client", DbType="Int")]
		public System.Nullable<int> ID_Client
		{
			get
			{
				return this._ID_Client;
			}
			set
			{
				if ((this._ID_Client != value))
				{
					if (this._Clienti.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ClientChanging(value);
					this.SendPropertyChanging();
					this._ID_Client = value;
					this.SendPropertyChanged("ID_Client");
					this.OnID_ClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Angajat", DbType="Int")]
		public System.Nullable<int> ID_Angajat
		{
			get
			{
				return this._ID_Angajat;
			}
			set
			{
				if ((this._ID_Angajat != value))
				{
					if (this._Angajati.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_AngajatChanging(value);
					this.SendPropertyChanging();
					this._ID_Angajat = value;
					this.SendPropertyChanged("ID_Angajat");
					this.OnID_AngajatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Serviciu", DbType="Int")]
		public System.Nullable<int> ID_Serviciu
		{
			get
			{
				return this._ID_Serviciu;
			}
			set
			{
				if ((this._ID_Serviciu != value))
				{
					if ((this._Servicii.HasLoadedOrAssignedValue || this._Servicii1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ServiciuChanging(value);
					this.SendPropertyChanging();
					this._ID_Serviciu = value;
					this.SendPropertyChanged("ID_Serviciu");
					this.OnID_ServiciuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_programare", DbType="DateTime NOT NULL")]
		public System.DateTime Data_programare
		{
			get
			{
				return this._Data_programare;
			}
			set
			{
				if ((this._Data_programare != value))
				{
					this.OnData_programareChanging(value);
					this.SendPropertyChanging();
					this._Data_programare = value;
					this.SendPropertyChanged("Data_programare");
					this.OnData_programareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Durata", DbType="Int NOT NULL")]
		public int Durata
		{
			get
			{
				return this._Durata;
			}
			set
			{
				if ((this._Durata != value))
				{
					this.OnDurataChanging(value);
					this.SendPropertyChanging();
					this._Durata = value;
					this.SendPropertyChanged("Durata");
					this.OnDurataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Programari_Preferinte", Storage="_Preferintes", ThisKey="ID_Programare", OtherKey="ID_Programare")]
		public EntitySet<Preferinte> Preferintes
		{
			get
			{
				return this._Preferintes;
			}
			set
			{
				this._Preferintes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Programari_Istoric_Clienti", Storage="_Istoric_Clientis", ThisKey="ID_Programare", OtherKey="ID_Programare")]
		public EntitySet<Istoric_Clienti> Istoric_Clientis
		{
			get
			{
				return this._Istoric_Clientis;
			}
			set
			{
				this._Istoric_Clientis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Angajati_Programari", Storage="_Angajati", ThisKey="ID_Angajat", OtherKey="ID_Angajat", IsForeignKey=true)]
		public Angajati Angajati
		{
			get
			{
				return this._Angajati.Entity;
			}
			set
			{
				Angajati previousValue = this._Angajati.Entity;
				if (((previousValue != value) 
							|| (this._Angajati.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Angajati.Entity = null;
						previousValue.Programaris.Remove(this);
					}
					this._Angajati.Entity = value;
					if ((value != null))
					{
						value.Programaris.Add(this);
						this._ID_Angajat = value.ID_Angajat;
					}
					else
					{
						this._ID_Angajat = default(Nullable<int>);
					}
					this.SendPropertyChanged("Angajati");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clienti_Programari", Storage="_Clienti", ThisKey="ID_Client", OtherKey="ID_Client", IsForeignKey=true)]
		public Clienti Clienti
		{
			get
			{
				return this._Clienti.Entity;
			}
			set
			{
				Clienti previousValue = this._Clienti.Entity;
				if (((previousValue != value) 
							|| (this._Clienti.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clienti.Entity = null;
						previousValue.Programaris.Remove(this);
					}
					this._Clienti.Entity = value;
					if ((value != null))
					{
						value.Programaris.Add(this);
						this._ID_Client = value.ID_Client;
					}
					else
					{
						this._ID_Client = default(Nullable<int>);
					}
					this.SendPropertyChanged("Clienti");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Servicii_Programari", Storage="_Servicii", ThisKey="ID_Serviciu", OtherKey="ID_Serviciu", IsForeignKey=true)]
		public Servicii Servicii
		{
			get
			{
				return this._Servicii.Entity;
			}
			set
			{
				Servicii previousValue = this._Servicii.Entity;
				if (((previousValue != value) 
							|| (this._Servicii.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Servicii.Entity = null;
						previousValue.Programaris.Remove(this);
					}
					this._Servicii.Entity = value;
					if ((value != null))
					{
						value.Programaris.Add(this);
						this._ID_Serviciu = value.ID_Serviciu;
					}
					else
					{
						this._ID_Serviciu = default(Nullable<int>);
					}
					this.SendPropertyChanged("Servicii");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Servicii1_Programari", Storage="_Servicii1", ThisKey="ID_Serviciu", OtherKey="ID_Serviciu", IsForeignKey=true)]
		public Servicii1 Servicii1
		{
			get
			{
				return this._Servicii1.Entity;
			}
			set
			{
				Servicii1 previousValue = this._Servicii1.Entity;
				if (((previousValue != value) 
							|| (this._Servicii1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Servicii1.Entity = null;
						previousValue.Programaris.Remove(this);
					}
					this._Servicii1.Entity = value;
					if ((value != null))
					{
						value.Programaris.Add(this);
						this._ID_Serviciu = value.ID_Serviciu;
					}
					else
					{
						this._ID_Serviciu = default(Nullable<int>);
					}
					this.SendPropertyChanged("Servicii1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Preferintes(Preferinte entity)
		{
			this.SendPropertyChanging();
			entity.Programari = this;
		}
		
		private void detach_Preferintes(Preferinte entity)
		{
			this.SendPropertyChanging();
			entity.Programari = null;
		}
		
		private void attach_Istoric_Clientis(Istoric_Clienti entity)
		{
			this.SendPropertyChanging();
			entity.Programari = this;
		}
		
		private void detach_Istoric_Clientis(Istoric_Clienti entity)
		{
			this.SendPropertyChanging();
			entity.Programari = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Produse_Cosmetice")]
	public partial class Produse_Cosmetice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Produs;
		
		private string _Denumire;
		
		private int _CantitaeInStoc;
		
		private System.Nullable<double> _PretBucata;
		
		private string _Furnizor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ProdusChanging(int value);
    partial void OnID_ProdusChanged();
    partial void OnDenumireChanging(string value);
    partial void OnDenumireChanged();
    partial void OnCantitaeInStocChanging(int value);
    partial void OnCantitaeInStocChanged();
    partial void OnPretBucataChanging(System.Nullable<double> value);
    partial void OnPretBucataChanged();
    partial void OnFurnizorChanging(string value);
    partial void OnFurnizorChanged();
    #endregion
		
		public Produse_Cosmetice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Produs", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Produs
		{
			get
			{
				return this._ID_Produs;
			}
			set
			{
				if ((this._ID_Produs != value))
				{
					this.OnID_ProdusChanging(value);
					this.SendPropertyChanging();
					this._ID_Produs = value;
					this.SendPropertyChanged("ID_Produs");
					this.OnID_ProdusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Denumire", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Denumire
		{
			get
			{
				return this._Denumire;
			}
			set
			{
				if ((this._Denumire != value))
				{
					this.OnDenumireChanging(value);
					this.SendPropertyChanging();
					this._Denumire = value;
					this.SendPropertyChanged("Denumire");
					this.OnDenumireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CantitaeInStoc", DbType="Int NOT NULL")]
		public int CantitaeInStoc
		{
			get
			{
				return this._CantitaeInStoc;
			}
			set
			{
				if ((this._CantitaeInStoc != value))
				{
					this.OnCantitaeInStocChanging(value);
					this.SendPropertyChanging();
					this._CantitaeInStoc = value;
					this.SendPropertyChanged("CantitaeInStoc");
					this.OnCantitaeInStocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PretBucata", DbType="Float")]
		public System.Nullable<double> PretBucata
		{
			get
			{
				return this._PretBucata;
			}
			set
			{
				if ((this._PretBucata != value))
				{
					this.OnPretBucataChanging(value);
					this.SendPropertyChanging();
					this._PretBucata = value;
					this.SendPropertyChanged("PretBucata");
					this.OnPretBucataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Furnizor", DbType="VarChar(30)")]
		public string Furnizor
		{
			get
			{
				return this._Furnizor;
			}
			set
			{
				if ((this._Furnizor != value))
				{
					this.OnFurnizorChanging(value);
					this.SendPropertyChanging();
					this._Furnizor = value;
					this.SendPropertyChanged("Furnizor");
					this.OnFurnizorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Preferinte")]
	public partial class Preferinte : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Preferinta;
		
		private System.Nullable<int> _ID_Programare;
		
		private string _Detalii_Preferinta;
		
		private EntityRef<Programari> _Programari;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PreferintaChanging(int value);
    partial void OnID_PreferintaChanged();
    partial void OnID_ProgramareChanging(System.Nullable<int> value);
    partial void OnID_ProgramareChanged();
    partial void OnDetalii_PreferintaChanging(string value);
    partial void OnDetalii_PreferintaChanged();
    #endregion
		
		public Preferinte()
		{
			this._Programari = default(EntityRef<Programari>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Preferinta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Preferinta
		{
			get
			{
				return this._ID_Preferinta;
			}
			set
			{
				if ((this._ID_Preferinta != value))
				{
					this.OnID_PreferintaChanging(value);
					this.SendPropertyChanging();
					this._ID_Preferinta = value;
					this.SendPropertyChanged("ID_Preferinta");
					this.OnID_PreferintaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Programare", DbType="Int")]
		public System.Nullable<int> ID_Programare
		{
			get
			{
				return this._ID_Programare;
			}
			set
			{
				if ((this._ID_Programare != value))
				{
					if (this._Programari.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ProgramareChanging(value);
					this.SendPropertyChanging();
					this._ID_Programare = value;
					this.SendPropertyChanged("ID_Programare");
					this.OnID_ProgramareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalii_Preferinta", DbType="VarChar(255)")]
		public string Detalii_Preferinta
		{
			get
			{
				return this._Detalii_Preferinta;
			}
			set
			{
				if ((this._Detalii_Preferinta != value))
				{
					this.OnDetalii_PreferintaChanging(value);
					this.SendPropertyChanging();
					this._Detalii_Preferinta = value;
					this.SendPropertyChanged("Detalii_Preferinta");
					this.OnDetalii_PreferintaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Programari_Preferinte", Storage="_Programari", ThisKey="ID_Programare", OtherKey="ID_Programare", IsForeignKey=true)]
		public Programari Programari
		{
			get
			{
				return this._Programari.Entity;
			}
			set
			{
				Programari previousValue = this._Programari.Entity;
				if (((previousValue != value) 
							|| (this._Programari.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Programari.Entity = null;
						previousValue.Preferintes.Remove(this);
					}
					this._Programari.Entity = value;
					if ((value != null))
					{
						value.Preferintes.Add(this);
						this._ID_Programare = value.ID_Programare;
					}
					else
					{
						this._ID_Programare = default(Nullable<int>);
					}
					this.SendPropertyChanged("Programari");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Istoric_Clienti")]
	public partial class Istoric_Clienti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Istoric;
		
		private System.Nullable<int> _ID_Client;
		
		private System.Nullable<int> _ID_Programare;
		
		private EntityRef<Clienti> _Clienti;
		
		private EntityRef<Programari> _Programari;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_IstoricChanging(int value);
    partial void OnID_IstoricChanged();
    partial void OnID_ClientChanging(System.Nullable<int> value);
    partial void OnID_ClientChanged();
    partial void OnID_ProgramareChanging(System.Nullable<int> value);
    partial void OnID_ProgramareChanged();
    #endregion
		
		public Istoric_Clienti()
		{
			this._Clienti = default(EntityRef<Clienti>);
			this._Programari = default(EntityRef<Programari>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Istoric", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Istoric
		{
			get
			{
				return this._ID_Istoric;
			}
			set
			{
				if ((this._ID_Istoric != value))
				{
					this.OnID_IstoricChanging(value);
					this.SendPropertyChanging();
					this._ID_Istoric = value;
					this.SendPropertyChanged("ID_Istoric");
					this.OnID_IstoricChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Client", DbType="Int")]
		public System.Nullable<int> ID_Client
		{
			get
			{
				return this._ID_Client;
			}
			set
			{
				if ((this._ID_Client != value))
				{
					if (this._Clienti.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ClientChanging(value);
					this.SendPropertyChanging();
					this._ID_Client = value;
					this.SendPropertyChanged("ID_Client");
					this.OnID_ClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Programare", DbType="Int")]
		public System.Nullable<int> ID_Programare
		{
			get
			{
				return this._ID_Programare;
			}
			set
			{
				if ((this._ID_Programare != value))
				{
					if (this._Programari.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ProgramareChanging(value);
					this.SendPropertyChanging();
					this._ID_Programare = value;
					this.SendPropertyChanged("ID_Programare");
					this.OnID_ProgramareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clienti_Istoric_Clienti", Storage="_Clienti", ThisKey="ID_Client", OtherKey="ID_Client", IsForeignKey=true)]
		public Clienti Clienti
		{
			get
			{
				return this._Clienti.Entity;
			}
			set
			{
				Clienti previousValue = this._Clienti.Entity;
				if (((previousValue != value) 
							|| (this._Clienti.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clienti.Entity = null;
						previousValue.Istoric_Clientis.Remove(this);
					}
					this._Clienti.Entity = value;
					if ((value != null))
					{
						value.Istoric_Clientis.Add(this);
						this._ID_Client = value.ID_Client;
					}
					else
					{
						this._ID_Client = default(Nullable<int>);
					}
					this.SendPropertyChanged("Clienti");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Programari_Istoric_Clienti", Storage="_Programari", ThisKey="ID_Programare", OtherKey="ID_Programare", IsForeignKey=true)]
		public Programari Programari
		{
			get
			{
				return this._Programari.Entity;
			}
			set
			{
				Programari previousValue = this._Programari.Entity;
				if (((previousValue != value) 
							|| (this._Programari.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Programari.Entity = null;
						previousValue.Istoric_Clientis.Remove(this);
					}
					this._Programari.Entity = value;
					if ((value != null))
					{
						value.Istoric_Clientis.Add(this);
						this._ID_Programare = value.ID_Programare;
					}
					else
					{
						this._ID_Programare = default(Nullable<int>);
					}
					this.SendPropertyChanged("Programari");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Functii")]
	public partial class Functii : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Functie;
		
		private string _Denumire;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_FunctieChanging(int value);
    partial void OnID_FunctieChanged();
    partial void OnDenumireChanging(string value);
    partial void OnDenumireChanged();
    #endregion
		
		public Functii()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Functie", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Functie
		{
			get
			{
				return this._ID_Functie;
			}
			set
			{
				if ((this._ID_Functie != value))
				{
					this.OnID_FunctieChanging(value);
					this.SendPropertyChanging();
					this._ID_Functie = value;
					this.SendPropertyChanged("ID_Functie");
					this.OnID_FunctieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Denumire", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Denumire
		{
			get
			{
				return this._Denumire;
			}
			set
			{
				if ((this._Denumire != value))
				{
					this.OnDenumireChanging(value);
					this.SendPropertyChanging();
					this._Denumire = value;
					this.SendPropertyChanged("Denumire");
					this.OnDenumireChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Servicii")]
	public partial class Servicii1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Serviciu;
		
		private string _Denumire;
		
		private int _Durata_aprox;
		
		private double _Pret;
		
		private EntitySet<Programari> _Programaris;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ServiciuChanging(int value);
    partial void OnID_ServiciuChanged();
    partial void OnDenumireChanging(string value);
    partial void OnDenumireChanged();
    partial void OnDurata_aproxChanging(int value);
    partial void OnDurata_aproxChanged();
    partial void OnPretChanging(double value);
    partial void OnPretChanged();
    #endregion
		
		public Servicii1()
		{
			this._Programaris = new EntitySet<Programari>(new Action<Programari>(this.attach_Programaris), new Action<Programari>(this.detach_Programaris));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Serviciu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Serviciu
		{
			get
			{
				return this._ID_Serviciu;
			}
			set
			{
				if ((this._ID_Serviciu != value))
				{
					this.OnID_ServiciuChanging(value);
					this.SendPropertyChanging();
					this._ID_Serviciu = value;
					this.SendPropertyChanged("ID_Serviciu");
					this.OnID_ServiciuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Denumire", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Denumire
		{
			get
			{
				return this._Denumire;
			}
			set
			{
				if ((this._Denumire != value))
				{
					this.OnDenumireChanging(value);
					this.SendPropertyChanging();
					this._Denumire = value;
					this.SendPropertyChanged("Denumire");
					this.OnDenumireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Durata_aprox", DbType="Int NOT NULL")]
		public int Durata_aprox
		{
			get
			{
				return this._Durata_aprox;
			}
			set
			{
				if ((this._Durata_aprox != value))
				{
					this.OnDurata_aproxChanging(value);
					this.SendPropertyChanging();
					this._Durata_aprox = value;
					this.SendPropertyChanged("Durata_aprox");
					this.OnDurata_aproxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pret", DbType="Float NOT NULL")]
		public double Pret
		{
			get
			{
				return this._Pret;
			}
			set
			{
				if ((this._Pret != value))
				{
					this.OnPretChanging(value);
					this.SendPropertyChanging();
					this._Pret = value;
					this.SendPropertyChanged("Pret");
					this.OnPretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Servicii1_Programari", Storage="_Programaris", ThisKey="ID_Serviciu", OtherKey="ID_Serviciu")]
		public EntitySet<Programari> Programaris
		{
			get
			{
				return this._Programaris;
			}
			set
			{
				this._Programaris.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Programaris(Programari entity)
		{
			this.SendPropertyChanging();
			entity.Servicii1 = this;
		}
		
		private void detach_Programaris(Programari entity)
		{
			this.SendPropertyChanging();
			entity.Servicii1 = null;
		}
	}
}
#pragma warning restore 1591
